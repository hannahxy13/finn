// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="instrumentation_wrapper_instrumentation_wrapper,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvm1802-vsva2197-2MP-e-S,HLS_INPUT_CLOCK=3.300000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=2.351500,HLS_SYN_LAT=3,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1654,HLS_SYN_LUT=2227,HLS_VERSION=2022_2}" *)

module instrumentation_wrapper (
        s_axi_ctrl_AWVALID,
        s_axi_ctrl_AWREADY,
        s_axi_ctrl_AWADDR,
        s_axi_ctrl_WVALID,
        s_axi_ctrl_WREADY,
        s_axi_ctrl_WDATA,
        s_axi_ctrl_WSTRB,
        s_axi_ctrl_ARVALID,
        s_axi_ctrl_ARREADY,
        s_axi_ctrl_ARADDR,
        s_axi_ctrl_RVALID,
        s_axi_ctrl_RREADY,
        s_axi_ctrl_RDATA,
        s_axi_ctrl_RRESP,
        s_axi_ctrl_BVALID,
        s_axi_ctrl_BREADY,
        s_axi_ctrl_BRESP,
        ap_clk,
        ap_rst_n,
        finnix_TDATA,
        finnox_TDATA,
        finnox_TVALID,
        finnox_TREADY,
        finnix_TVALID,
        finnix_TREADY
);

parameter    C_S_AXI_CTRL_DATA_WIDTH = 32;
parameter    C_S_AXI_CTRL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CTRL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   s_axi_ctrl_AWVALID;
output   s_axi_ctrl_AWREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_ctrl_AWADDR;
input   s_axi_ctrl_WVALID;
output   s_axi_ctrl_WREADY;
input  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_ctrl_WDATA;
input  [C_S_AXI_CTRL_WSTRB_WIDTH - 1:0] s_axi_ctrl_WSTRB;
input   s_axi_ctrl_ARVALID;
output   s_axi_ctrl_ARREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_ctrl_ARADDR;
output   s_axi_ctrl_RVALID;
input   s_axi_ctrl_RREADY;
output  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_ctrl_RDATA;
output  [1:0] s_axi_ctrl_RRESP;
output   s_axi_ctrl_BVALID;
input   s_axi_ctrl_BREADY;
output  [1:0] s_axi_ctrl_BRESP;
input   ap_clk;
input   ap_rst_n;
output  [391:0] finnix_TDATA;
input  [7:0] finnox_TDATA;
input   finnox_TVALID;
output   finnox_TREADY;
output   finnix_TVALID;
input   finnix_TREADY;

 reg    ap_rst_n_inv;
wire   [31:0] cfg;
wire   [31:0] status_i;
wire    entry_proc_U0_ap_start;
wire    entry_proc_U0_ap_done;
wire    entry_proc_U0_ap_continue;
wire    entry_proc_U0_ap_idle;
wire    entry_proc_U0_ap_ready;
wire   [31:0] entry_proc_U0_cfg_c_din;
wire    entry_proc_U0_cfg_c_write;
wire    move_ap_uint_8_U0_ap_start;
wire    move_ap_uint_8_U0_ap_done;
wire    move_ap_uint_8_U0_ap_continue;
wire    move_ap_uint_8_U0_ap_idle;
wire    move_ap_uint_8_U0_ap_ready;
wire    move_ap_uint_8_U0_finnox_TREADY;
wire   [7:0] move_ap_uint_8_U0_finnox0_din;
wire    move_ap_uint_8_U0_finnox0_write;
wire    instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_ap_start;
wire    instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_ap_done;
wire    instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_ap_continue;
wire    instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_ap_idle;
wire    instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_ap_ready;
wire    instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_cfg_read;
wire   [31:0] instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_status_o;
wire    instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_status_o_ap_vld;
wire   [31:0] instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_latency;
wire    instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_latency_ap_vld;
wire   [31:0] instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_interval;
wire    instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_interval_ap_vld;
wire   [31:0] instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_checksum;
wire    instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_checksum_ap_vld;
wire   [391:0] instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_finnix0_din;
wire    instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_finnix0_write;
wire    instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_finnox0_read;
wire    move_ap_uint_392_U0_ap_start;
wire    move_ap_uint_392_U0_ap_done;
wire    move_ap_uint_392_U0_ap_continue;
wire    move_ap_uint_392_U0_ap_idle;
wire    move_ap_uint_392_U0_ap_ready;
wire    move_ap_uint_392_U0_finnix0_read;
wire   [391:0] move_ap_uint_392_U0_finnix_TDATA;
wire    move_ap_uint_392_U0_finnix_TVALID;
wire    cfg_c_full_n;
wire   [31:0] cfg_c_dout;
wire   [2:0] cfg_c_num_data_valid;
wire   [2:0] cfg_c_fifo_cap;
wire    cfg_c_empty_n;
wire    finnox0_full_n;
wire   [7:0] finnox0_dout;
wire   [1:0] finnox0_num_data_valid;
wire   [1:0] finnox0_fifo_cap;
wire    finnox0_empty_n;
wire    finnix0_full_n;
wire   [391:0] finnix0_dout;
wire   [1:0] finnix0_num_data_valid;
wire   [1:0] finnix0_fifo_cap;
wire    finnix0_empty_n;

instrumentation_wrapper_ctrl_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_DATA_WIDTH ))
ctrl_s_axi_U(
    .AWVALID(s_axi_ctrl_AWVALID),
    .AWREADY(s_axi_ctrl_AWREADY),
    .AWADDR(s_axi_ctrl_AWADDR),
    .WVALID(s_axi_ctrl_WVALID),
    .WREADY(s_axi_ctrl_WREADY),
    .WDATA(s_axi_ctrl_WDATA),
    .WSTRB(s_axi_ctrl_WSTRB),
    .ARVALID(s_axi_ctrl_ARVALID),
    .ARREADY(s_axi_ctrl_ARREADY),
    .ARADDR(s_axi_ctrl_ARADDR),
    .RVALID(s_axi_ctrl_RVALID),
    .RREADY(s_axi_ctrl_RREADY),
    .RDATA(s_axi_ctrl_RDATA),
    .RRESP(s_axi_ctrl_RRESP),
    .BVALID(s_axi_ctrl_BVALID),
    .BREADY(s_axi_ctrl_BREADY),
    .BRESP(s_axi_ctrl_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .cfg(cfg),
    .status_o(instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_status_o),
    .status_o_ap_vld(instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_status_o_ap_vld),
    .status_i(status_i),
    .latency(instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_latency),
    .latency_ap_vld(instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_latency_ap_vld),
    .interval(instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_interval),
    .interval_ap_vld(instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_interval_ap_vld),
    .checksum(instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_checksum),
    .checksum_ap_vld(instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_checksum_ap_vld)
);

instrumentation_wrapper_entry_proc entry_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(entry_proc_U0_ap_start),
    .ap_done(entry_proc_U0_ap_done),
    .ap_continue(entry_proc_U0_ap_continue),
    .ap_idle(entry_proc_U0_ap_idle),
    .ap_ready(entry_proc_U0_ap_ready),
    .cfg(cfg),
    .cfg_c_din(entry_proc_U0_cfg_c_din),
    .cfg_c_num_data_valid(cfg_c_num_data_valid),
    .cfg_c_fifo_cap(cfg_c_fifo_cap),
    .cfg_c_full_n(cfg_c_full_n),
    .cfg_c_write(entry_proc_U0_cfg_c_write)
);

instrumentation_wrapper_move_ap_uint_8_s move_ap_uint_8_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(move_ap_uint_8_U0_ap_start),
    .ap_done(move_ap_uint_8_U0_ap_done),
    .ap_continue(move_ap_uint_8_U0_ap_continue),
    .ap_idle(move_ap_uint_8_U0_ap_idle),
    .ap_ready(move_ap_uint_8_U0_ap_ready),
    .finnox_TDATA(finnox_TDATA),
    .finnox_TVALID(finnox_TVALID),
    .finnox_TREADY(move_ap_uint_8_U0_finnox_TREADY),
    .finnox0_din(move_ap_uint_8_U0_finnox0_din),
    .finnox0_num_data_valid(finnox0_num_data_valid),
    .finnox0_fifo_cap(finnox0_fifo_cap),
    .finnox0_full_n(finnox0_full_n),
    .finnox0_write(move_ap_uint_8_U0_finnox0_write)
);

instrumentation_wrapper_instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_s instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_ap_start),
    .ap_done(instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_ap_done),
    .ap_continue(instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_ap_continue),
    .ap_idle(instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_ap_idle),
    .ap_ready(instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_ap_ready),
    .cfg_dout(cfg_c_dout),
    .cfg_num_data_valid(cfg_c_num_data_valid),
    .cfg_fifo_cap(cfg_c_fifo_cap),
    .cfg_empty_n(cfg_c_empty_n),
    .cfg_read(instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_cfg_read),
    .status_i(status_i),
    .status_o(instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_status_o),
    .status_o_ap_vld(instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_status_o_ap_vld),
    .latency(instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_latency),
    .latency_ap_vld(instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_latency_ap_vld),
    .interval(instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_interval),
    .interval_ap_vld(instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_interval_ap_vld),
    .checksum(instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_checksum),
    .checksum_ap_vld(instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_checksum_ap_vld),
    .finnix0_din(instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_finnix0_din),
    .finnix0_num_data_valid(finnix0_num_data_valid),
    .finnix0_fifo_cap(finnix0_fifo_cap),
    .finnix0_full_n(finnix0_full_n),
    .finnix0_write(instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_finnix0_write),
    .finnox0_dout(finnox0_dout),
    .finnox0_num_data_valid(finnox0_num_data_valid),
    .finnox0_fifo_cap(finnox0_fifo_cap),
    .finnox0_empty_n(finnox0_empty_n),
    .finnox0_read(instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_finnox0_read)
);

instrumentation_wrapper_move_ap_uint_392_s move_ap_uint_392_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(move_ap_uint_392_U0_ap_start),
    .ap_done(move_ap_uint_392_U0_ap_done),
    .ap_continue(move_ap_uint_392_U0_ap_continue),
    .ap_idle(move_ap_uint_392_U0_ap_idle),
    .ap_ready(move_ap_uint_392_U0_ap_ready),
    .finnix0_dout(finnix0_dout),
    .finnix0_num_data_valid(finnix0_num_data_valid),
    .finnix0_fifo_cap(finnix0_fifo_cap),
    .finnix0_empty_n(finnix0_empty_n),
    .finnix0_read(move_ap_uint_392_U0_finnix0_read),
    .finnix_TREADY(finnix_TREADY),
    .finnix_TDATA(move_ap_uint_392_U0_finnix_TDATA),
    .finnix_TVALID(move_ap_uint_392_U0_finnix_TVALID)
);

instrumentation_wrapper_fifo_w32_d3_S cfg_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_cfg_c_din),
    .if_full_n(cfg_c_full_n),
    .if_write(entry_proc_U0_cfg_c_write),
    .if_dout(cfg_c_dout),
    .if_num_data_valid(cfg_c_num_data_valid),
    .if_fifo_cap(cfg_c_fifo_cap),
    .if_empty_n(cfg_c_empty_n),
    .if_read(instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_cfg_read)
);

instrumentation_wrapper_fifo_w8_d2_S finnox0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(move_ap_uint_8_U0_finnox0_din),
    .if_full_n(finnox0_full_n),
    .if_write(move_ap_uint_8_U0_finnox0_write),
    .if_dout(finnox0_dout),
    .if_num_data_valid(finnox0_num_data_valid),
    .if_fifo_cap(finnox0_fifo_cap),
    .if_empty_n(finnox0_empty_n),
    .if_read(instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_finnox0_read)
);

instrumentation_wrapper_fifo_w392_d2_S finnix0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_finnix0_din),
    .if_full_n(finnix0_full_n),
    .if_write(instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_finnix0_write),
    .if_dout(finnix0_dout),
    .if_num_data_valid(finnix0_num_data_valid),
    .if_fifo_cap(finnix0_fifo_cap),
    .if_empty_n(finnix0_empty_n),
    .if_read(move_ap_uint_392_U0_finnix0_read)
);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign entry_proc_U0_ap_continue = 1'b1;

assign entry_proc_U0_ap_start = 1'b1;

assign finnix_TDATA = move_ap_uint_392_U0_finnix_TDATA;

assign finnix_TVALID = move_ap_uint_392_U0_finnix_TVALID;

assign finnox_TREADY = move_ap_uint_8_U0_finnox_TREADY;

assign instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_ap_continue = 1'b1;

assign instrument_34u_16u_1u_1u_ap_uint_392_ap_uint_8_U0_ap_start = 1'b1;

assign move_ap_uint_392_U0_ap_continue = 1'b1;

assign move_ap_uint_392_U0_ap_start = 1'b1;

assign move_ap_uint_8_U0_ap_continue = 1'b1;

assign move_ap_uint_8_U0_ap_start = 1'b1;


reg find_df_deadlock = 0;
// synthesis translate_off
`include "instrumentation_wrapper_hls_deadlock_detector.vh"
// synthesis translate_on

endmodule //instrumentation_wrapper

